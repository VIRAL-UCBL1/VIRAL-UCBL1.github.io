{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to VIRAL","text":""},{"location":"#viral","title":"VIRAL","text":"<p>Vision-grounded Integration for Reward design And Learning is inspired by DREFUN-V. This project aims to create a framework for reward function generation in Gymnasium environments, utilizing and VideoLLM in order to  enchance aligment too. Below, you can see how the framework is structured.</p>"},{"location":"#diagram","title":"Diagram","text":"<p>For more details about the diagram, you can refer to our paper: paper</p>"},{"location":"#further-understanding","title":"Further Understanding","text":"<p>You can visit our website, which provides installation instructions as well as project documentation: - Documentation</p> <p>We also provide a link to the course by Mr. YUN that we attended: - Course</p>"},{"location":"LICENSE/","title":"License","text":"<pre><code>                GNU GENERAL PUBLIC LICENSE\n                   Version 3, 29 June 2007\n</code></pre> <p>Copyright (C) 2007 Free Software Foundation, Inc. https://fsf.org/  Everyone is permitted to copy and distribute verbatim copies  of this license document, but changing it is not allowed.</p> <pre><code>                        Preamble\n</code></pre> <p>The GNU General Public License is a free, copyleft license for software and other kinds of works.</p> <p>The licenses for most software and other practical works are designed to take away your freedom to share and change the works.  By contrast, the GNU General Public License is intended to guarantee your freedom to share and change all versions of a program--to make sure it remains free software for all its users.  We, the Free Software Foundation, use the GNU General Public License for most of our software; it applies also to any other work released this way by its authors.  You can apply it to your programs, too.</p> <p>When we speak of free software, we are referring to freedom, not price.  Our General Public Licenses are designed to make sure that you have the freedom to distribute copies of free software (and charge for them if you wish), that you receive source code or can get it if you want it, that you can change the software or use pieces of it in new free programs, and that you know you can do these things.</p> <p>To protect your rights, we need to prevent others from denying you these rights or asking you to surrender the rights.  Therefore, you have certain responsibilities if you distribute copies of the software, or if you modify it: responsibilities to respect the freedom of others.</p> <p>For example, if you distribute copies of such a program, whether gratis or for a fee, you must pass on to the recipients the same freedoms that you received.  You must make sure that they, too, receive or can get the source code.  And you must show them these terms so they know their rights.</p> <p>Developers that use the GNU GPL protect your rights with two steps: (1) assert copyright on the software, and (2) offer you this License giving you legal permission to copy, distribute and/or modify it.</p> <p>For the developers' and authors' protection, the GPL clearly explains that there is no warranty for this free software.  For both users' and authors' sake, the GPL requires that modified versions be marked as changed, so that their problems will not be attributed erroneously to authors of previous versions.</p> <p>Some devices are designed to deny users access to install or run modified versions of the software inside them, although the manufacturer can do so.  This is fundamentally incompatible with the aim of protecting users' freedom to change the software.  The systematic pattern of such abuse occurs in the area of products for individuals to use, which is precisely where it is most unacceptable.  Therefore, we have designed this version of the GPL to prohibit the practice for those products.  If such problems arise substantially in other domains, we stand ready to extend this provision to those domains in future versions of the GPL, as needed to protect the freedom of users.</p> <p>Finally, every program is threatened constantly by software patents. States should not allow patents to restrict development and use of software on general-purpose computers, but in those that do, we wish to avoid the special danger that patents applied to a free program could make it effectively proprietary.  To prevent this, the GPL assures that patents cannot be used to render the program non-free.</p> <p>The precise terms and conditions for copying, distribution and modification follow.</p> <pre><code>                   TERMS AND CONDITIONS\n</code></pre> <ol> <li>Definitions.</li> </ol> <p>\"This License\" refers to version 3 of the GNU General Public License.</p> <p>\"Copyright\" also means copyright-like laws that apply to other kinds of works, such as semiconductor masks.</p> <p>\"The Program\" refers to any copyrightable work licensed under this License.  Each licensee is addressed as \"you\".  \"Licensees\" and \"recipients\" may be individuals or organizations.</p> <p>To \"modify\" a work means to copy from or adapt all or part of the work in a fashion requiring copyright permission, other than the making of an exact copy.  The resulting work is called a \"modified version\" of the earlier work or a work \"based on\" the earlier work.</p> <p>A \"covered work\" means either the unmodified Program or a work based on the Program.</p> <p>To \"propagate\" a work means to do anything with it that, without permission, would make you directly or secondarily liable for infringement under applicable copyright law, except executing it on a computer or modifying a private copy.  Propagation includes copying, distribution (with or without modification), making available to the public, and in some countries other activities as well.</p> <p>To \"convey\" a work means any kind of propagation that enables other parties to make or receive copies.  Mere interaction with a user through a computer network, with no transfer of a copy, is not conveying.</p> <p>An interactive user interface displays \"Appropriate Legal Notices\" to the extent that it includes a convenient and prominently visible feature that (1) displays an appropriate copyright notice, and (2) tells the user that there is no warranty for the work (except to the extent that warranties are provided), that licensees may convey the work under this License, and how to view a copy of this License.  If the interface presents a list of user commands or options, such as a menu, a prominent item in the list meets this criterion.</p> <ol> <li>Source Code.</li> </ol> <p>The \"source code\" for a work means the preferred form of the work for making modifications to it.  \"Object code\" means any non-source form of a work.</p> <p>A \"Standard Interface\" means an interface that either is an official standard defined by a recognized standards body, or, in the case of interfaces specified for a particular programming language, one that is widely used among developers working in that language.</p> <p>The \"System Libraries\" of an executable work include anything, other than the work as a whole, that (a) is included in the normal form of packaging a Major Component, but which is not part of that Major Component, and (b) serves only to enable use of the work with that Major Component, or to implement a Standard Interface for which an implementation is available to the public in source code form.  A \"Major Component\", in this context, means a major essential component (kernel, window system, and so on) of the specific operating system (if any) on which the executable work runs, or a compiler used to produce the work, or an object code interpreter used to run it.</p> <p>The \"Corresponding Source\" for a work in object code form means all the source code needed to generate, install, and (for an executable work) run the object code and to modify the work, including scripts to control those activities.  However, it does not include the work's System Libraries, or general-purpose tools or generally available free programs which are used unmodified in performing those activities but which are not part of the work.  For example, Corresponding Source includes interface definition files associated with source files for the work, and the source code for shared libraries and dynamically linked subprograms that the work is specifically designed to require, such as by intimate data communication or control flow between those subprograms and other parts of the work.</p> <p>The Corresponding Source need not include anything that users can regenerate automatically from other parts of the Corresponding Source.</p> <p>The Corresponding Source for a work in source code form is that same work.</p> <ol> <li>Basic Permissions.</li> </ol> <p>All rights granted under this License are granted for the term of copyright on the Program, and are irrevocable provided the stated conditions are met.  This License explicitly affirms your unlimited permission to run the unmodified Program.  The output from running a covered work is covered by this License only if the output, given its content, constitutes a covered work.  This License acknowledges your rights of fair use or other equivalent, as provided by copyright law.</p> <p>You may make, run and propagate covered works that you do not convey, without conditions so long as your license otherwise remains in force.  You may convey covered works to others for the sole purpose of having them make modifications exclusively for you, or provide you with facilities for running those works, provided that you comply with the terms of this License in conveying all material for which you do not control copyright.  Those thus making or running the covered works for you must do so exclusively on your behalf, under your direction and control, on terms that prohibit them from making any copies of your copyrighted material outside their relationship with you.</p> <p>Conveying under any other circumstances is permitted solely under the conditions stated below.  Sublicensing is not allowed; section 10 makes it unnecessary.</p> <ol> <li>Protecting Users' Legal Rights From Anti-Circumvention Law.</li> </ol> <p>No covered work shall be deemed part of an effective technological measure under any applicable law fulfilling obligations under article 11 of the WIPO copyright treaty adopted on 20 December 1996, or similar laws prohibiting or restricting circumvention of such measures.</p> <p>When you convey a covered work, you waive any legal power to forbid circumvention of technological measures to the extent such circumvention is effected by exercising rights under this License with respect to the covered work, and you disclaim any intention to limit operation or modification of the work as a means of enforcing, against the work's users, your or third parties' legal rights to forbid circumvention of technological measures.</p> <ol> <li>Conveying Verbatim Copies.</li> </ol> <p>You may convey verbatim copies of the Program's source code as you receive it, in any medium, provided that you conspicuously and appropriately publish on each copy an appropriate copyright notice; keep intact all notices stating that this License and any non-permissive terms added in accord with section 7 apply to the code; keep intact all notices of the absence of any warranty; and give all recipients a copy of this License along with the Program.</p> <p>You may charge any price or no price for each copy that you convey, and you may offer support or warranty protection for a fee.</p> <ol> <li>Conveying Modified Source Versions.</li> </ol> <p>You may convey a work based on the Program, or the modifications to produce it from the Program, in the form of source code under the terms of section 4, provided that you also meet all of these conditions:</p> <pre><code>a) The work must carry prominent notices stating that you modified\nit, and giving a relevant date.\n\nb) The work must carry prominent notices stating that it is\nreleased under this License and any conditions added under section\n7.  This requirement modifies the requirement in section 4 to\n\"keep intact all notices\".\n\nc) You must license the entire work, as a whole, under this\nLicense to anyone who comes into possession of a copy.  This\nLicense will therefore apply, along with any applicable section 7\nadditional terms, to the whole of the work, and all its parts,\nregardless of how they are packaged.  This License gives no\npermission to license the work in any other way, but it does not\ninvalidate such permission if you have separately received it.\n\nd) If the work has interactive user interfaces, each must display\nAppropriate Legal Notices; however, if the Program has interactive\ninterfaces that do not display Appropriate Legal Notices, your\nwork need not make them do so.\n</code></pre> <p>A compilation of a covered work with other separate and independent works, which are not by their nature extensions of the covered work, and which are not combined with it such as to form a larger program, in or on a volume of a storage or distribution medium, is called an \"aggregate\" if the compilation and its resulting copyright are not used to limit the access or legal rights of the compilation's users beyond what the individual works permit.  Inclusion of a covered work in an aggregate does not cause this License to apply to the other parts of the aggregate.</p> <ol> <li>Conveying Non-Source Forms.</li> </ol> <p>You may convey a covered work in object code form under the terms of sections 4 and 5, provided that you also convey the machine-readable Corresponding Source under the terms of this License, in one of these ways:</p> <pre><code>a) Convey the object code in, or embodied in, a physical product\n(including a physical distribution medium), accompanied by the\nCorresponding Source fixed on a durable physical medium\ncustomarily used for software interchange.\n\nb) Convey the object code in, or embodied in, a physical product\n(including a physical distribution medium), accompanied by a\nwritten offer, valid for at least three years and valid for as\nlong as you offer spare parts or customer support for that product\nmodel, to give anyone who possesses the object code either (1) a\ncopy of the Corresponding Source for all the software in the\nproduct that is covered by this License, on a durable physical\nmedium customarily used for software interchange, for a price no\nmore than your reasonable cost of physically performing this\nconveying of source, or (2) access to copy the\nCorresponding Source from a network server at no charge.\n\nc) Convey individual copies of the object code with a copy of the\nwritten offer to provide the Corresponding Source.  This\nalternative is allowed only occasionally and noncommercially, and\nonly if you received the object code with such an offer, in accord\nwith subsection 6b.\n\nd) Convey the object code by offering access from a designated\nplace (gratis or for a charge), and offer equivalent access to the\nCorresponding Source in the same way through the same place at no\nfurther charge.  You need not require recipients to copy the\nCorresponding Source along with the object code.  If the place to\ncopy the object code is a network server, the Corresponding Source\nmay be on a different server (operated by you or a third party)\nthat supports equivalent copying facilities, provided you maintain\nclear directions next to the object code saying where to find the\nCorresponding Source.  Regardless of what server hosts the\nCorresponding Source, you remain obligated to ensure that it is\navailable for as long as needed to satisfy these requirements.\n\ne) Convey the object code using peer-to-peer transmission, provided\nyou inform other peers where the object code and Corresponding\nSource of the work are being offered to the general public at no\ncharge under subsection 6d.\n</code></pre> <p>A separable portion of the object code, whose source code is excluded from the Corresponding Source as a System Library, need not be included in conveying the object code work.</p> <p>A \"User Product\" is either (1) a \"consumer product\", which means any tangible personal property which is normally used for personal, family, or household purposes, or (2) anything designed or sold for incorporation into a dwelling.  In determining whether a product is a consumer product, doubtful cases shall be resolved in favor of coverage.  For a particular product received by a particular user, \"normally used\" refers to a typical or common use of that class of product, regardless of the status of the particular user or of the way in which the particular user actually uses, or expects or is expected to use, the product.  A product is a consumer product regardless of whether the product has substantial commercial, industrial or non-consumer uses, unless such uses represent the only significant mode of use of the product.</p> <p>\"Installation Information\" for a User Product means any methods, procedures, authorization keys, or other information required to install and execute modified versions of a covered work in that User Product from a modified version of its Corresponding Source.  The information must suffice to ensure that the continued functioning of the modified object code is in no case prevented or interfered with solely because modification has been made.</p> <p>If you convey an object code work under this section in, or with, or specifically for use in, a User Product, and the conveying occurs as part of a transaction in which the right of possession and use of the User Product is transferred to the recipient in perpetuity or for a fixed term (regardless of how the transaction is characterized), the Corresponding Source conveyed under this section must be accompanied by the Installation Information.  But this requirement does not apply if neither you nor any third party retains the ability to install modified object code on the User Product (for example, the work has been installed in ROM).</p> <p>The requirement to provide Installation Information does not include a requirement to continue to provide support service, warranty, or updates for a work that has been modified or installed by the recipient, or for the User Product in which it has been modified or installed.  Access to a network may be denied when the modification itself materially and adversely affects the operation of the network or violates the rules and protocols for communication across the network.</p> <p>Corresponding Source conveyed, and Installation Information provided, in accord with this section must be in a format that is publicly documented (and with an implementation available to the public in source code form), and must require no special password or key for unpacking, reading or copying.</p> <ol> <li>Additional Terms.</li> </ol> <p>\"Additional permissions\" are terms that supplement the terms of this License by making exceptions from one or more of its conditions. Additional permissions that are applicable to the entire Program shall be treated as though they were included in this License, to the extent that they are valid under applicable law.  If additional permissions apply only to part of the Program, that part may be used separately under those permissions, but the entire Program remains governed by this License without regard to the additional permissions.</p> <p>When you convey a copy of a covered work, you may at your option remove any additional permissions from that copy, or from any part of it.  (Additional permissions may be written to require their own removal in certain cases when you modify the work.)  You may place additional permissions on material, added by you to a covered work, for which you have or can give appropriate copyright permission.</p> <p>Notwithstanding any other provision of this License, for material you add to a covered work, you may (if authorized by the copyright holders of that material) supplement the terms of this License with terms:</p> <pre><code>a) Disclaiming warranty or limiting liability differently from the\nterms of sections 15 and 16 of this License; or\n\nb) Requiring preservation of specified reasonable legal notices or\nauthor attributions in that material or in the Appropriate Legal\nNotices displayed by works containing it; or\n\nc) Prohibiting misrepresentation of the origin of that material, or\nrequiring that modified versions of such material be marked in\nreasonable ways as different from the original version; or\n\nd) Limiting the use for publicity purposes of names of licensors or\nauthors of the material; or\n\ne) Declining to grant rights under trademark law for use of some\ntrade names, trademarks, or service marks; or\n\nf) Requiring indemnification of licensors and authors of that\nmaterial by anyone who conveys the material (or modified versions of\nit) with contractual assumptions of liability to the recipient, for\nany liability that these contractual assumptions directly impose on\nthose licensors and authors.\n</code></pre> <p>All other non-permissive additional terms are considered \"further restrictions\" within the meaning of section 10.  If the Program as you received it, or any part of it, contains a notice stating that it is governed by this License along with a term that is a further restriction, you may remove that term.  If a license document contains a further restriction but permits relicensing or conveying under this License, you may add to a covered work material governed by the terms of that license document, provided that the further restriction does not survive such relicensing or conveying.</p> <p>If you add terms to a covered work in accord with this section, you must place, in the relevant source files, a statement of the additional terms that apply to those files, or a notice indicating where to find the applicable terms.</p> <p>Additional terms, permissive or non-permissive, may be stated in the form of a separately written license, or stated as exceptions; the above requirements apply either way.</p> <ol> <li>Termination.</li> </ol> <p>You may not propagate or modify a covered work except as expressly provided under this License.  Any attempt otherwise to propagate or modify it is void, and will automatically terminate your rights under this License (including any patent licenses granted under the third paragraph of section 11).</p> <p>However, if you cease all violation of this License, then your license from a particular copyright holder is reinstated (a) provisionally, unless and until the copyright holder explicitly and finally terminates your license, and (b) permanently, if the copyright holder fails to notify you of the violation by some reasonable means prior to 60 days after the cessation.</p> <p>Moreover, your license from a particular copyright holder is reinstated permanently if the copyright holder notifies you of the violation by some reasonable means, this is the first time you have received notice of violation of this License (for any work) from that copyright holder, and you cure the violation prior to 30 days after your receipt of the notice.</p> <p>Termination of your rights under this section does not terminate the licenses of parties who have received copies or rights from you under this License.  If your rights have been terminated and not permanently reinstated, you do not qualify to receive new licenses for the same material under section 10.</p> <ol> <li>Acceptance Not Required for Having Copies.</li> </ol> <p>You are not required to accept this License in order to receive or run a copy of the Program.  Ancillary propagation of a covered work occurring solely as a consequence of using peer-to-peer transmission to receive a copy likewise does not require acceptance.  However, nothing other than this License grants you permission to propagate or modify any covered work.  These actions infringe copyright if you do not accept this License.  Therefore, by modifying or propagating a covered work, you indicate your acceptance of this License to do so.</p> <ol> <li>Automatic Licensing of Downstream Recipients.</li> </ol> <p>Each time you convey a covered work, the recipient automatically receives a license from the original licensors, to run, modify and propagate that work, subject to this License.  You are not responsible for enforcing compliance by third parties with this License.</p> <p>An \"entity transaction\" is a transaction transferring control of an organization, or substantially all assets of one, or subdividing an organization, or merging organizations.  If propagation of a covered work results from an entity transaction, each party to that transaction who receives a copy of the work also receives whatever licenses to the work the party's predecessor in interest had or could give under the previous paragraph, plus a right to possession of the Corresponding Source of the work from the predecessor in interest, if the predecessor has it or can get it with reasonable efforts.</p> <p>You may not impose any further restrictions on the exercise of the rights granted or affirmed under this License.  For example, you may not impose a license fee, royalty, or other charge for exercise of rights granted under this License, and you may not initiate litigation (including a cross-claim or counterclaim in a lawsuit) alleging that any patent claim is infringed by making, using, selling, offering for sale, or importing the Program or any portion of it.</p> <ol> <li>Patents.</li> </ol> <p>A \"contributor\" is a copyright holder who authorizes use under this License of the Program or a work on which the Program is based.  The work thus licensed is called the contributor's \"contributor version\".</p> <p>A contributor's \"essential patent claims\" are all patent claims owned or controlled by the contributor, whether already acquired or hereafter acquired, that would be infringed by some manner, permitted by this License, of making, using, or selling its contributor version, but do not include claims that would be infringed only as a consequence of further modification of the contributor version.  For purposes of this definition, \"control\" includes the right to grant patent sublicenses in a manner consistent with the requirements of this License.</p> <p>Each contributor grants you a non-exclusive, worldwide, royalty-free patent license under the contributor's essential patent claims, to make, use, sell, offer for sale, import and otherwise run, modify and propagate the contents of its contributor version.</p> <p>In the following three paragraphs, a \"patent license\" is any express agreement or commitment, however denominated, not to enforce a patent (such as an express permission to practice a patent or covenant not to sue for patent infringement).  To \"grant\" such a patent license to a party means to make such an agreement or commitment not to enforce a patent against the party.</p> <p>If you convey a covered work, knowingly relying on a patent license, and the Corresponding Source of the work is not available for anyone to copy, free of charge and under the terms of this License, through a publicly available network server or other readily accessible means, then you must either (1) cause the Corresponding Source to be so available, or (2) arrange to deprive yourself of the benefit of the patent license for this particular work, or (3) arrange, in a manner consistent with the requirements of this License, to extend the patent license to downstream recipients.  \"Knowingly relying\" means you have actual knowledge that, but for the patent license, your conveying the covered work in a country, or your recipient's use of the covered work in a country, would infringe one or more identifiable patents in that country that you have reason to believe are valid.</p> <p>If, pursuant to or in connection with a single transaction or arrangement, you convey, or propagate by procuring conveyance of, a covered work, and grant a patent license to some of the parties receiving the covered work authorizing them to use, propagate, modify or convey a specific copy of the covered work, then the patent license you grant is automatically extended to all recipients of the covered work and works based on it.</p> <p>A patent license is \"discriminatory\" if it does not include within the scope of its coverage, prohibits the exercise of, or is conditioned on the non-exercise of one or more of the rights that are specifically granted under this License.  You may not convey a covered work if you are a party to an arrangement with a third party that is in the business of distributing software, under which you make payment to the third party based on the extent of your activity of conveying the work, and under which the third party grants, to any of the parties who would receive the covered work from you, a discriminatory patent license (a) in connection with copies of the covered work conveyed by you (or copies made from those copies), or (b) primarily for and in connection with specific products or compilations that contain the covered work, unless you entered into that arrangement, or that patent license was granted, prior to 28 March 2007.</p> <p>Nothing in this License shall be construed as excluding or limiting any implied license or other defenses to infringement that may otherwise be available to you under applicable patent law.</p> <ol> <li>No Surrender of Others' Freedom.</li> </ol> <p>If conditions are imposed on you (whether by court order, agreement or otherwise) that contradict the conditions of this License, they do not excuse you from the conditions of this License.  If you cannot convey a covered work so as to satisfy simultaneously your obligations under this License and any other pertinent obligations, then as a consequence you may not convey it at all.  For example, if you agree to terms that obligate you to collect a royalty for further conveying from those to whom you convey the Program, the only way you could satisfy both those terms and this License would be to refrain entirely from conveying the Program.</p> <ol> <li>Use with the GNU Affero General Public License.</li> </ol> <p>Notwithstanding any other provision of this License, you have permission to link or combine any covered work with a work licensed under version 3 of the GNU Affero General Public License into a single combined work, and to convey the resulting work.  The terms of this License will continue to apply to the part which is the covered work, but the special requirements of the GNU Affero General Public License, section 13, concerning interaction through a network will apply to the combination as such.</p> <ol> <li>Revised Versions of this License.</li> </ol> <p>The Free Software Foundation may publish revised and/or new versions of the GNU General Public License from time to time.  Such new versions will be similar in spirit to the present version, but may differ in detail to address new problems or concerns.</p> <p>Each version is given a distinguishing version number.  If the Program specifies that a certain numbered version of the GNU General Public License \"or any later version\" applies to it, you have the option of following the terms and conditions either of that numbered version or of any later version published by the Free Software Foundation.  If the Program does not specify a version number of the GNU General Public License, you may choose any version ever published by the Free Software Foundation.</p> <p>If the Program specifies that a proxy can decide which future versions of the GNU General Public License can be used, that proxy's public statement of acceptance of a version permanently authorizes you to choose that version for the Program.</p> <p>Later license versions may give you additional or different permissions.  However, no additional obligations are imposed on any author or copyright holder as a result of your choosing to follow a later version.</p> <ol> <li>Disclaimer of Warranty.</li> </ol> <p>THERE IS NO WARRANTY FOR THE PROGRAM, TO THE EXTENT PERMITTED BY APPLICABLE LAW.  EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR OTHER PARTIES PROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE PROGRAM IS WITH YOU.  SHOULD THE PROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY SERVICING, REPAIR OR CORRECTION.</p> <ol> <li>Limitation of Liability.</li> </ol> <p>IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MODIFIES AND/OR CONVEYS THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED TO LOSS OF DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER PROGRAMS), EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES.</p> <ol> <li>Interpretation of Sections 15 and 16.</li> </ol> <p>If the disclaimer of warranty and limitation of liability provided above cannot be given local legal effect according to their terms, reviewing courts shall apply local law that most closely approximates an absolute waiver of all civil liability in connection with the Program, unless a warranty or assumption of liability accompanies a copy of the Program in return for a fee.</p> <pre><code>                 END OF TERMS AND CONDITIONS\n\n        How to Apply These Terms to Your New Programs\n</code></pre> <p>If you develop a new program, and you want it to be of the greatest possible use to the public, the best way to achieve this is to make it free software which everyone can redistribute and change under these terms.</p> <p>To do so, attach the following notices to the program.  It is safest to attach them to the start of each source file to most effectively state the exclusion of warranty; and each file should have at least the \"copyright\" line and a pointer to where the full notice is found.</p> <pre><code>&lt;one line to give the program's name and a brief idea of what it does.&gt;\nCopyright (C) &lt;year&gt;  &lt;name of author&gt;\n\nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with this program.  If not, see &lt;https://www.gnu.org/licenses/&gt;.\n</code></pre> <p>Also add information on how to contact you by electronic and paper mail.</p> <p>If the program does terminal interaction, make it output a short notice like this when it starts in an interactive mode:</p> <pre><code>&lt;program&gt;  Copyright (C) &lt;year&gt;  &lt;name of author&gt;\nThis program comes with ABSOLUTELY NO WARRANTY; for details type `show w'.\nThis is free software, and you are welcome to redistribute it\nunder certain conditions; type `show c' for details.\n</code></pre> <p>The hypothetical commands <code>show w' and</code>show c' should show the appropriate parts of the General Public License.  Of course, your program's commands might be different; for a GUI interface, you would use an \"about box\".</p> <p>You should also get your employer (if you work as a programmer) or school, if any, to sign a \"copyright disclaimer\" for the program, if necessary. For more information on this, and how to apply and follow the GNU GPL, see https://www.gnu.org/licenses/.</p> <p>The GNU General Public License does not permit incorporating your program into proprietary programs.  If your program is a subroutine library, you may consider it more useful to permit linking proprietary applications with the library.  If this is what you want to do, use the GNU Lesser General Public License instead of this License.  But first, please read https://www.gnu.org/licenses/why-not-lgpl.html.</p>"},{"location":"setup/","title":"Welcome to VIRAL Installation Guide","text":""},{"location":"setup/#requirements","title":"Requirements","text":"<ul> <li>Python 3.11</li> <li>Ollama.</li> <li>PyTorch.</li> <li>CUDA</li> <li>Git.</li> <li>Conda.</li> </ul> <pre><code>git clone https://github.com/VIRAL-UCBL1/VIRAL.git\ncd VIRAL\n</code></pre>"},{"location":"setup/#installation","title":"Installation","text":"<p>Before installing the dependencies, create a virtual environment with conda or venv.</p> <ul> <li>Python requirements:</li> </ul> <pre><code>pip install -r requirements.txt\n</code></pre> <ul> <li>Ollama:</li> </ul> <pre><code>ollama run qwen2.5-coder\n</code></pre>"},{"location":"setup/#usage","title":"Usage","text":"<pre><code>cd src\npython main.py\n</code></pre> <p>You can see help message by running:</p> <pre><code>python main.py -h\n</code></pre>"},{"location":"code_docs/VIRAL/","title":"VIRAL","text":""},{"location":"code_docs/VIRAL/#src.VIRAL.VIRAL","title":"<code>VIRAL</code>","text":""},{"location":"code_docs/VIRAL/#src.VIRAL.VIRAL.__init__","title":"<code>__init__(env_type, model_actor, model_critic, hf=False, vd=False, seed=None, training_time=25000, nb_vec_envs=1, legacy_training=True, options={}, proxies=None)</code>","text":"<p>Initialize VIRAL architecture for dynamic reward function generation</p> <p>Parameters:</p> Name Type Description Default <code>env_type</code> <code>EnvType</code> <p>Environment type for which the reward function is generated</p> required <code>model_actor</code> <code>str</code> <p>LLM model for reward function generation</p> required <code>model_critic</code> <code>str</code> <p>LLM model for reward function evaluation</p> required <code>hf</code> <code>bool</code> <p>Enable human feedback. Defaults to False.</p> <code>False</code> <code>vd</code> <code>bool</code> <p>Enable video description. Defaults to False.</p> <code>False</code> <code>seed</code> <code>int</code> <p>Random seed for training. Defaults to None.</p> <code>None</code> <code>training_time</code> <code>int</code> <p>Training time in seconds. Defaults to 25000.</p> <code>25000</code> <code>nb_vec_envs</code> <code>int</code> <p>Number of vectorized environments. Defaults to 1.</p> <code>1</code> <code>legacy_training</code> <code>bool</code> <p>Use legacy training. Defaults to True.</p> <code>True</code> <code>options</code> <code>dict</code> <p>LLM generation options. Defaults to {}.</p> <code>{}</code> <code>proxies</code> <code>dict</code> <p>Proxy configuration. Defaults to None.</p> <code>None</code>"},{"location":"code_docs/VIRAL/#src.VIRAL.VIRAL.critical_refine_reward","title":"<code>critical_refine_reward(idx)</code>","text":"<p>Refine a reward function that has critical performance issues. This method refines a reward function that has critical performance issues based on the evaluation results. It uses a Language Model (LLM) to generate a new reward function that addresses the identified issues.</p> <p>Parameters:</p> Name Type Description Default <code>idx</code> <code>int</code> <p>Index of the reward function in the memory to be refined.     Typically the worst-performing function from previous evaluation.</p> required <p>Returns:</p> Name Type Description <code>int</code> <code>int</code> <p>Index of the newly created refined reward function in the memory.</p>"},{"location":"code_docs/VIRAL/#src.VIRAL.VIRAL.generate_context","title":"<code>generate_context()</code>","text":"<p>Generate a context for the reward function generation process. This method uses a Language Model (LLM) to generate a context for the reward function generation process. The context includes information about the environment, task, and goal to be achieved.</p>"},{"location":"code_docs/VIRAL/#src.VIRAL.VIRAL.generate_reward_function","title":"<code>generate_reward_function(n_init=2, n_refine=1, focus='')</code>","text":"<p>Generate and iteratively improve a reward function using a Language Model (LLM).</p> <p>This method implements a sophisticated reward function generation process that involves multiple stages of creation, evaluation, and refinement.</p> Key Stages <ol> <li>Initial Function Generation: Create two initial reward function candidates</li> <li>Evaluation: Compare and identify the best and worst performing functions</li> <li>Iterative Refinement: Progressively improve the worst-performing function</li> </ol> <p>Parameters:</p> Name Type Description Default <code>task_description</code> <code>str</code> <p>A detailed description of the task or environment                     for which the reward function is being generated.</p> required <code>iterations</code> <code>int</code> <p>Number of refinement iterations to perform.                         Defaults to 1.</p> required <p>Returns:</p> Type Description <code>list[State]</code> <p>list[State]: A list of generated and refined reward function states,         containing information about each function's performance         and implementation.</p> Process Overview <ul> <li>Generates two initial reward functions using an LLM</li> <li>Evaluates these functions using a policy evaluation method</li> <li>Selects the worst-performing function for refinement</li> <li>Iteratively refines the function through self-refinement</li> <li>Tracks the evolution of reward functions in the memory</li> </ul> Detailed Workflow <ol> <li>Generate two initial reward functions<ul> <li>Uses a predefined prompt template</li> <li>Applies configurable LLM generation options</li> <li>Compiles and tests each generated function</li> </ul> </li> <li>Evaluates initial functions<ul> <li>Identifies best and worst performing functions</li> </ul> </li> <li>Iterative Refinement<ul> <li>Applies self-refinement to the worst-performing function</li> <li>Re-evaluates after each refinement</li> <li>Repeats for specified number of iterations</li> </ul> </li> </ol> Note <ul> <li>Uses dynamic LLM configuration options</li> <li>Supports flexible environment types</li> <li>Provides a systematic approach to reward function generation</li> <li>Logging at various stages for debugging and tracking</li> </ul>"},{"location":"code_docs/VIRAL/#src.VIRAL.VIRAL.human_feedback","title":"<code>human_feedback(prompt, idx)</code>","text":"<p>Request human feedback on a reward function to refine it further.</p> <p>Parameters:</p> Name Type Description Default <code>prompt</code> <code>str</code> <p>The prompt to present to the human for feedback</p> required <code>idx</code> <code>int</code> <p>The index of the reward function in the memory</p> required <p>Returns:</p> Name Type Description <code>str</code> <code>str</code> <p>The updated prompt with human feedback included</p>"},{"location":"code_docs/VIRAL/#src.VIRAL.VIRAL.self_refine_reward","title":"<code>self_refine_reward(idx)</code>","text":"<p>Iteratively improve a reward function using self-refinement techniques.</p> <p>This method implements an intelligent self-refinement process for reward functions by leveraging a Language Model (LLM) to analyze and improve the current function based on its previous performance.</p> Key Objectives <ul> <li>Analyze current reward function performance</li> <li>Generate an improved version of the reward function</li> <li>Maintain the core task objectives while optimizing the reward signal</li> </ul> <p>Parameters:</p> Name Type Description Default <code>idx</code> <code>int</code> <p>Index of the reward function in the memory to be refined.     Typically the worst-performing function from previous evaluation.</p> required <p>Returns:</p> Name Type Description <code>int</code> <code>int</code> <p>Index of the newly created refined reward function in the memory.</p> Refinement Process <ol> <li>Construct a refinement prompt with:<ul> <li>Current reward function code</li> <li>Performance metrics</li> <li>Explicit refinement goals</li> </ul> </li> <li>Generate a new reward function using LLM</li> <li>Compile and validate the new function</li> <li>Append the new function to memory</li> <li>Return the index of the new function</li> </ol> Refinement Goals <ul> <li>Increase success rate of the policy</li> <li>Optimize the reward signal for better learning</li> <li>Preserve the original task objectives</li> <li>Improve overall performance</li> </ul> Notes <ul> <li>Uses the existing memory to track function evolution</li> <li>Leverages LLM for intelligent function refinement</li> <li>Provides a systematic approach to reward function improvement</li> <li>Maintains a history of function iterations</li> </ul>"},{"location":"code_docs/VIRAL/#src.VIRAL.VIRAL.test_reward_func","title":"<code>test_reward_func(reward_func)</code>","text":"<p>Test a reward function using the policy trainer.</p> <p>Parameters:</p> Name Type Description Default <code>reward_func</code> <code>str</code> <p>The reward function to test</p> required"},{"location":"code_docs/VIRAL/#src.VIRAL.VIRAL.video_description","title":"<code>video_description(prompt, idx)</code>","text":"<p>Request a video description from the user to refine a reward function.</p> <p>Parameters:</p> Name Type Description Default <code>prompt</code> <code>str</code> <p>The prompt to present to the user for video description</p> required <code>idx</code> <code>int</code> <p>The index of the reward function in the memory</p> required <p>Returns:</p> Name Type Description <code>str</code> <p>The updated prompt with the video description included</p>"},{"location":"code_docs/main/","title":"main","text":""},{"location":"code_docs/main/#src.main.main","title":"<code>main()</code>","text":"<p>Main entry point of the script.</p> <p>This block is executed when the script is run directly. It initializes the logger, and run VIRAL. It uses CLI interface. memory.</p>"},{"location":"code_docs/main/#src.main.parse_logger","title":"<code>parse_logger()</code>","text":"<p>Parses command-line arguments to configure the logger.</p> <p>Returns:</p> Name Type Description <code>Logger</code> <p>Configured logger instance.</p>"},{"location":"code_docs/test_env/","title":"Test env","text":""},{"location":"code_docs/test_env/#src.test_env.main","title":"<code>main()</code>","text":"<p>Main entry point of the script.</p> <p>This block is executed when the script is run directly. It initializes the logger, and run VIRAL. It uses CLI interface. memory.</p>"},{"location":"code_docs/test_env/#src.test_env.parse_logger","title":"<code>parse_logger()</code>","text":"<p>Parses command-line arguments to configure the logger.</p> <p>Returns:</p> Name Type Description <code>Logger</code> <p>Configured logger instance.</p>"},{"location":"code_docs/test_function/","title":"Test function","text":""},{"location":"code_docs/test_function/#src.test_function.main","title":"<code>main()</code>","text":"<p>Main entry point of the script.</p> <p>This block is executed when the script is run directly. It initializes the logger, and run VIRAL. It uses CLI interface. memory.</p>"},{"location":"code_docs/test_function/#src.test_function.parse_logger","title":"<code>parse_logger()</code>","text":"<p>Parses command-line arguments to configure the logger.</p> <p>Returns:</p> Name Type Description <code>Logger</code> <p>Configured logger instance.</p>"},{"location":"code_docs/visualise/","title":"Visualise","text":""},{"location":"code_docs/visualise/#src.visualise.main","title":"<code>main()</code>","text":"<p>Main entry point of the script.</p> <p>This block is executed when the script is run directly. It initializes the logger, and run VIRAL. It uses CLI interface. memory.</p>"},{"location":"code_docs/visualise/#src.visualise.parse_logger","title":"<code>parse_logger()</code>","text":"<p>Parses command-line arguments to configure the logger.</p> <p>Returns:</p> Name Type Description <code>Logger</code> <p>Configured logger instance.</p>"},{"location":"code_docs/Environments/Algo/","title":"Algo","text":""},{"location":"code_docs/Environments/Algo/#src.Environments.Algo.Algo","title":"<code>Algo</code>","text":"<p>               Bases: <code>Enum</code></p> <p>Enum class for the algorithms.</p> <p>Attributes:</p> Name Type Description <code>PPO</code> <code>str</code> <p>Proximal Policy Optimization</p> <code>REINFORCE</code> <code>str</code> <p>REINFORCE</p> <code>DQN</code> <code>str</code> <p>Deep Q-Network</p>"},{"location":"code_docs/Environments/CartPole/","title":"CartPole","text":""},{"location":"code_docs/Environments/CartPole/#src.Environments.CartPole.CartPole","title":"<code>CartPole</code>","text":"<p>               Bases: <code>EnvType</code></p> <p>This class represents the CartPole environment.</p>"},{"location":"code_docs/Environments/CartPole/#src.Environments.CartPole.CartPole.__init__","title":"<code>__init__(algo=Algo.PPO, algo_param={'policy': 'MlpPolicy', 'verbose': 0, 'device': 'cpu'}, prompt={'Goal': 'Balance a pole on a cart', 'Observation Space': 'Num Observation Min Max\\n        0 Cart Position -4.8 4.8\\n        1 Cart Velocity -Inf Inf\\n        2 Pole Angle ~ -0.418 rad (-24\u00b0) ~ 0.418 rad (24\u00b0)\\n        3 Pole Angular Velocity -Inf Inf'})</code>","text":"<p>Initializes the CartPole environment.</p> <p>Parameters:</p> Name Type Description Default <code>algo</code> <code>Algo</code> <p>The algorithm to use for training.</p> <code>PPO</code> <code>algo_param</code> <code>dict</code> <p>The parameters for the algorithm.</p> <code>{'policy': 'MlpPolicy', 'verbose': 0, 'device': 'cpu'}</code> <code>prompt</code> <code>dict | str</code> <p>The prompt for the environment.</p> <code>{'Goal': 'Balance a pole on a cart', 'Observation Space': 'Num Observation Min Max\\n        0 Cart Position -4.8 4.8\\n        1 Cart Velocity -Inf Inf\\n        2 Pole Angle ~ -0.418 rad (-24\u00b0) ~ 0.418 rad (24\u00b0)\\n        3 Pole Angular Velocity -Inf Inf'}</code>"},{"location":"code_docs/Environments/CartPole/#src.Environments.CartPole.CartPole.__repr__","title":"<code>__repr__()</code>","text":"<p>String representation of the CartPole environment.</p> <p>Returns:</p> Name Type Description <code>str</code> <p>String representation of the CartPole environment.</p>"},{"location":"code_docs/Environments/CartPole/#src.Environments.CartPole.CartPole.objective_metric","title":"<code>objective_metric(states)</code>","text":"<p>Objective metric for the CartPole environment. Calculates a score for the given state on a particular observation of the CartPole environment.</p> <p>:param state: The state of the CartPole environment. :return: a table of tuples containing the string name of the metric and the value of the metric.</p>"},{"location":"code_docs/Environments/CartPole/#src.Environments.CartPole.CartPole.success_func","title":"<code>success_func(env, info)</code>","text":"<p>Cartpole Evaluation Function</p> <p>Parameters:</p> Name Type Description Default <code>env</code> <p>gym.Env : Environment</p> required <code>info</code> <p>dict : Information from the environment</p> required <p>Returns:</p> Name Type Description <code>bool</code> <code>tuple[bool | bool]</code> <p>True if the episode is truncated, False otherwise</p>"},{"location":"code_docs/Environments/EnvType/","title":"EnvType","text":""},{"location":"code_docs/Environments/EnvType/#src.Environments.EnvType.EnvType","title":"<code>EnvType</code>","text":"<p>Abstract class for environment types.</p>"},{"location":"code_docs/Environments/EnvType/#src.Environments.EnvType.EnvType.__init__","title":"<code>__init__(algo, algo_param, prompt)</code>","text":"<p>Initializes the environment.</p> <p>Parameters:</p> Name Type Description Default <code>algo</code> <code>Algo</code> <p>The algorithm to use for training.</p> required <code>algo_param</code> <code>dict</code> <p>The parameters for the algorithm.</p> required <code>prompt</code> <code>dict | str</code> <p>The prompt for the environment.</p> required"},{"location":"code_docs/Environments/EnvType/#src.Environments.EnvType.EnvType.__repr__","title":"<code>__repr__()</code>  <code>abstractmethod</code>","text":"<p>String representation of the environment.</p> <p>Returns:</p> Name Type Description <code>str</code> <code>str</code> <p>String representation of the environment.</p>"},{"location":"code_docs/Environments/Highway/","title":"Highway","text":""},{"location":"code_docs/Environments/Highway/#src.Environments.Highway.Highway","title":"<code>Highway</code>","text":"<p>               Bases: <code>EnvType</code></p> <p>This class represents the Highway environment.</p>"},{"location":"code_docs/Environments/Highway/#src.Environments.Highway.Highway.__init__","title":"<code>__init__(algo=Algo.DQN, algo_param={'policy': 'MlpPolicy', 'policy_kwargs': dict(net_arch=[256, 256]), 'learning_rate': 0.0005, 'buffer_size': 15000, 'learning_starts': 200, 'batch_size': 32, 'gamma': 0.8, 'train_freq': 1, 'gradient_steps': 1, 'target_update_interval': 50, 'verbose': 0, 'tensorboard_log': 'model/highway_dqn/'}, prompt={'Goal': 'Control the ego vehicle to reach a high speed without collision.', 'Observation Space': 'features include:\\n    - presence: Indicates whether a vehicle is present (1 if present, 0 otherwise).\\n    - x: Longitudinal position of the vehicle.\\n    - y: Lateral position of the vehicle.\\n    - vx: Longitudinal velocity of the vehicle.\\n    - vy: Lateral velocity of the vehicle.\\nEvery vehicle has a line in the matrix. Number are normalized.\\nObservation looks like this for 4 vehicles with the ego vehicle.\\nObservation:\\n[[ 1.          0.8738351   0.33333334  0.3125      0.        ]\\n[ 1.          0.11421007  0.33333334 -0.04992021  0.        ]\\n[ 1.          0.24808374  0.         -0.02311555  0.        ]\\n[ 1.          0.35202843  0.33333334 -0.08297566  0.        ]\\n[ 1.          0.47324142  0.33333334 -0.03491976  0.        ]]\\nYou have multiple action such as :\\nEach action is typically represented as an integer:\\n0: Keep Lane\\n1: Slow Down\\n2: Speed Up\\n3: Change Lane Left\\n4: Change Lane Right\\n'})</code>","text":"<p>Initializes the Highway environment.</p> <p>Parameters:</p> Name Type Description Default <code>algo</code> <code>Algo</code> <p>The algorithm to use. Defaults to Algo.DQN.</p> <code>DQN</code> <code>algo_param</code> <code>dict</code> <p>The algorithm parameters. Defaults to { \"policy\": \"MlpPolicy\", \"policy_kwargs\": dict(net_arch=[256, 256]), \"learning_rate\": 5e-4, \"buffer_size\": 15000, \"learning_starts\": 200, \"batch_size\": 32, \"gamma\": 0.8, \"train_freq\": 1, \"gradient_steps\": 1, \"target_update_interval\": 50, \"verbose\": 0, \"tensorboard_log\": \"model/highway_dqn/\",</p> <code>{'policy': 'MlpPolicy', 'policy_kwargs': dict(net_arch=[256, 256]), 'learning_rate': 0.0005, 'buffer_size': 15000, 'learning_starts': 200, 'batch_size': 32, 'gamma': 0.8, 'train_freq': 1, 'gradient_steps': 1, 'target_update_interval': 50, 'verbose': 0, 'tensorboard_log': 'model/highway_dqn/'}</code> <code>prompt</code> <code>dict | str</code> <p>The prompt to display. Defaults to { \"Goal\": \"Control the ego vehicle to reach a high speed without collision.\", [..]</p> <code>{'Goal': 'Control the ego vehicle to reach a high speed without collision.', 'Observation Space': 'features include:\\n    - presence: Indicates whether a vehicle is present (1 if present, 0 otherwise).\\n    - x: Longitudinal position of the vehicle.\\n    - y: Lateral position of the vehicle.\\n    - vx: Longitudinal velocity of the vehicle.\\n    - vy: Lateral velocity of the vehicle.\\nEvery vehicle has a line in the matrix. Number are normalized.\\nObservation looks like this for 4 vehicles with the ego vehicle.\\nObservation:\\n[[ 1.          0.8738351   0.33333334  0.3125      0.        ]\\n[ 1.          0.11421007  0.33333334 -0.04992021  0.        ]\\n[ 1.          0.24808374  0.         -0.02311555  0.        ]\\n[ 1.          0.35202843  0.33333334 -0.08297566  0.        ]\\n[ 1.          0.47324142  0.33333334 -0.03491976  0.        ]]\\nYou have multiple action such as :\\nEach action is typically represented as an integer:\\n0: Keep Lane\\n1: Slow Down\\n2: Speed Up\\n3: Change Lane Left\\n4: Change Lane Right\\n'}</code>"},{"location":"code_docs/Environments/Highway/#src.Environments.Highway.Highway.__repr__","title":"<code>__repr__()</code>","text":"<p>Repr\u00e9sentation of the Highway environment.</p> <p>Returns:</p> Name Type Description <code>str</code> <p>The representation of the Highway environment.</p>"},{"location":"code_docs/Environments/Highway/#src.Environments.Highway.Highway.objective_metric","title":"<code>objective_metric(states)</code>","text":"<p>function to calculate the objective metric</p> <p>Parameters:</p> Name Type Description Default <code>states</code> <code>list</code> <p>The states.</p> required <p>Returns:</p> Name Type Description <code>list</code> <code>list[dict[str, float]]</code> <p>The objective metric.</p>"},{"location":"code_docs/Environments/Highway/#src.Environments.Highway.Highway.success_func","title":"<code>success_func(env, info)</code>","text":"<p>function to check if the simulation is successful or not</p> <p>Parameters:</p> Name Type Description Default <code>env</code> <code>Env</code> <p>The environment.</p> required <code>info</code> <code>dict</code> <p>The info dictionary.</p> required"},{"location":"code_docs/Environments/Hopper/","title":"Hopper","text":""},{"location":"code_docs/Environments/Hopper/#src.Environments.Hopper.Hopper","title":"<code>Hopper</code>","text":"<p>               Bases: <code>EnvType</code></p> <p>This class represents the Hopper environment.</p>"},{"location":"code_docs/Environments/Hopper/#src.Environments.Hopper.Hopper.__init__","title":"<code>__init__(algo=Algo.PPO, algo_param={'policy': 'MlpPolicy', 'verbose': 0, 'device': 'cpu'}, prompt={'Goal': \"Control the Hopper to move in the forward direction, take care to don't fall, make the highest jump\", 'Observation Space': 'Box(-inf, inf, (11,), float64)\\n\\nThe observation space consists of the following parts (in order):\\nqpos (5 elements by default): Position values of the robot\u2019s body parts.\\nqvel (6 elements): The velocities of these individual body parts (their derivatives).\\nthe x- and y-coordinates are returned in info with the keys \"x_position\" and \"y_position\", respectively.\\n\\n| Num      | Observation                                      | Min   | Max  | Type                |\\n|----------|--------------------------------------------------|-------|------|---------------------|\\n| 0        | z-coordinate of the torso (height of hopper)     | -Inf  | Inf  | position (m)        |\\n| 1        | angle of the torso                               | -Inf  | Inf  | angle (rad)         |\\n| 2        | angle of the thigh joint                         | -Inf  | Inf  | angle (rad)         |\\n| 3        | angle of the leg joint                           | -Inf  | Inf  | angle (rad)         |\\n| 4        | angle of the foot joint                          | -Inf  | Inf  | angle (rad)         |\\n| 5        | velocity of the x-coordinate of the torso        | -Inf  | Inf  | velocity (m/s)      |\\n| 6        | velocity of the z-coordinate (height) of torso   | -Inf  | Inf  | velocity (m/s)      |\\n| 7        | angular velocity of the angle of the torso       | -Inf  | Inf  | angular velocity (rad/s) |\\n| 8        | angular velocity of the thigh hinge              | -Inf  | Inf  | angular velocity (rad/s) |\\n| 9        | angular velocity of the leg hinge                | -Inf  | Inf  | angular velocity (rad/s) |\\n| 10       | angular velocity of the foot hinge               | -Inf  | Inf  | angular velocity (rad/s) |\\n| excluded | x-coordinate of the torso                        | -Inf  | Inf  | position (m)        |\\n\\t\\t\"Action Space\": The action space is a Box(-1, 1, (3,), float32). An action represents the torques applied at the hinge joints.\\n| Num | Action                          | Control Min | Control Max | Name (in corresponding XML file) | Joint  | Type         |\\n|-----|---------------------------------|-------------|-------------|-----------------------------------|--------|--------------|\\n| 0   | Torque applied on the thigh rotor | -1          | 1           | thigh_joint                       | hinge  | torque (N m) |\\n| 1   | Torque applied on the leg rotor   | -1          | 1           | leg_joint                         | hinge  | torque (N m) |\\n| 2   | Torque applied on the foot rotor  | -1          | 1           | foot_joint                        | hinge  | torque (N m) |\\n\\n'})</code>","text":"<p>Constructor for the Hopper environment.</p> <p>Parameters:</p> Name Type Description Default <code>algo</code> <code>Algo</code> <p>The algorithm to be used for training. Defaults to Algo.PPO.</p> <code>PPO</code> <code>algo_param</code> <code>dict</code> <p>The parameters for the algorithm. Defaults to {\"policy\": \"MlpPolicy\", \"verbose\": 0, \"device\": \"cpu\"}.</p> <code>{'policy': 'MlpPolicy', 'verbose': 0, 'device': 'cpu'}</code> <code>prompt</code> <code>dict</code> <p>The prompt for the environment. Defaults to {\"Goal\": \"Control the Hopper to move in the forward direction, take care to don't fall, make the highest jump\", \"Observation Space\": [...]</p> <code>{'Goal': \"Control the Hopper to move in the forward direction, take care to don't fall, make the highest jump\", 'Observation Space': 'Box(-inf, inf, (11,), float64)\\n\\nThe observation space consists of the following parts (in order):\\nqpos (5 elements by default): Position values of the robot\u2019s body parts.\\nqvel (6 elements): The velocities of these individual body parts (their derivatives).\\nthe x- and y-coordinates are returned in info with the keys \"x_position\" and \"y_position\", respectively.\\n\\n| Num      | Observation                                      | Min   | Max  | Type                |\\n|----------|--------------------------------------------------|-------|------|---------------------|\\n| 0        | z-coordinate of the torso (height of hopper)     | -Inf  | Inf  | position (m)        |\\n| 1        | angle of the torso                               | -Inf  | Inf  | angle (rad)         |\\n| 2        | angle of the thigh joint                         | -Inf  | Inf  | angle (rad)         |\\n| 3        | angle of the leg joint                           | -Inf  | Inf  | angle (rad)         |\\n| 4        | angle of the foot joint                          | -Inf  | Inf  | angle (rad)         |\\n| 5        | velocity of the x-coordinate of the torso        | -Inf  | Inf  | velocity (m/s)      |\\n| 6        | velocity of the z-coordinate (height) of torso   | -Inf  | Inf  | velocity (m/s)      |\\n| 7        | angular velocity of the angle of the torso       | -Inf  | Inf  | angular velocity (rad/s) |\\n| 8        | angular velocity of the thigh hinge              | -Inf  | Inf  | angular velocity (rad/s) |\\n| 9        | angular velocity of the leg hinge                | -Inf  | Inf  | angular velocity (rad/s) |\\n| 10       | angular velocity of the foot hinge               | -Inf  | Inf  | angular velocity (rad/s) |\\n| excluded | x-coordinate of the torso                        | -Inf  | Inf  | position (m)        |\\n\\t\\t\"Action Space\": The action space is a Box(-1, 1, (3,), float32). An action represents the torques applied at the hinge joints.\\n| Num | Action                          | Control Min | Control Max | Name (in corresponding XML file) | Joint  | Type         |\\n|-----|---------------------------------|-------------|-------------|-----------------------------------|--------|--------------|\\n| 0   | Torque applied on the thigh rotor | -1          | 1           | thigh_joint                       | hinge  | torque (N m) |\\n| 1   | Torque applied on the leg rotor   | -1          | 1           | leg_joint                         | hinge  | torque (N m) |\\n| 2   | Torque applied on the foot rotor  | -1          | 1           | foot_joint                        | hinge  | torque (N m) |\\n\\n'}</code>"},{"location":"code_docs/Environments/Hopper/#src.Environments.Hopper.Hopper.__repr__","title":"<code>__repr__()</code>","text":"<p>Returns the string representation of the Hopper environment.</p> <p>Returns:</p> Name Type Description <code>str</code> <p>The string representation of the Hopper environment.</p>"},{"location":"code_docs/Environments/Hopper/#src.Environments.Hopper.Hopper.objective_metric","title":"<code>objective_metric(states)</code>","text":"<p>Objective metric for the CartPole environment. Calculates a score for the given state on a particular observation of the CartPole environment.</p> <p>:param state: The state of the CartPole environment. :return: a table of tuples containing the string name of the metric and the value of the metric.</p>"},{"location":"code_docs/Environments/Hopper/#src.Environments.Hopper.Hopper.success_func","title":"<code>success_func(env, info)</code>","text":"<p>Hopper success_fun</p> <p>Parameters:</p> Name Type Description Default <code>env</code> <code>Env</code> required <code>info</code> <code>dict</code> required <p>Returns:</p> Type Description <code>tuple[bool | bool]</code> <p>tuple[bool|bool]: is_success, is_failure tuple</p>"},{"location":"code_docs/Environments/LunarLander/","title":"LunarLander","text":""},{"location":"code_docs/Environments/LunarLander/#src.Environments.LunarLander.LunarLander","title":"<code>LunarLander</code>","text":"<p>               Bases: <code>EnvType</code></p> <p>This class represents the Lunar Lander environment.</p>"},{"location":"code_docs/Environments/LunarLander/#src.Environments.LunarLander.LunarLander.__init__","title":"<code>__init__(algo=Algo.DQN, algo_param={'batch_size': 128, 'buffer_size': 50000, 'exploration_final_eps': 0.1, 'exploration_fraction': 0.12, 'gamma': 0.99, 'gradient_steps': -1, 'learning_rate': 0.00063, 'learning_starts': 0, 'policy': 'MlpPolicy', 'policy_kwargs': {'net_arch': [256, 256]}, 'target_update_interval': 250, 'train_freq': 4, 'tensorboard_log': 'data/model/LunarLanderDQN/'}, prompt={'Goal': \"Land safely on the ground, but don't move if you touch the ground\", 'Observation Space': 'Box([ -2.5 -2.5 -10. -10. -6.2831855 -10. -0. -0. ], [ 2.5 2.5 10. 10. 6.2831855 10. 1. 1. ], (8,), float32)\\n        The state is an 8-dimensional vector: the coordinates of the lander in x &amp; y, its linear velocities in x &amp; y, its angle, its angular velocity, and two booleans that represent whether each leg is in contact with the ground or not.\\n    '})</code>","text":"<p>Constructor for the Lunar Lander environment.</p> <p>Parameters:</p> Name Type Description Default <code>algo</code> <code>Algo</code> <p>The algorithm to be used for training. Defaults to Algo.DQN.</p> <code>DQN</code> <code>algo_param</code> <code>dict</code> <p>The parameters for the algorithm. Defaults to {\"batch_size\": 128, \"buffer_size\": 50000, \"exploration_final_eps\": 0.1, \"exploration_fraction\": 0.12, \"gamma\": 0.99, \"gradient_steps\": -1, \"learning_rate\": 0.00063, \"learning_starts\": 0, \"policy\": \"MlpPolicy\", \"policy_kwargs\": {\"net_arch\": [256, 256]}, \"target_update_interval\": 250, \"train_freq\": 4, \"tensorboard_log\": \"data/model/LunarLanderDQN/\"}.</p> <code>{'batch_size': 128, 'buffer_size': 50000, 'exploration_final_eps': 0.1, 'exploration_fraction': 0.12, 'gamma': 0.99, 'gradient_steps': -1, 'learning_rate': 0.00063, 'learning_starts': 0, 'policy': 'MlpPolicy', 'policy_kwargs': {'net_arch': [256, 256]}, 'target_update_interval': 250, 'train_freq': 4, 'tensorboard_log': 'data/model/LunarLanderDQN/'}</code> <code>prompt</code> <code>dict | str</code> <p>The prompt for the environment. Defaults to {\"Goal\": \"Land safely on the ground, but don't move if you touch the ground\", \"Observation Space\": [...].</p> <code>{'Goal': \"Land safely on the ground, but don't move if you touch the ground\", 'Observation Space': 'Box([ -2.5 -2.5 -10. -10. -6.2831855 -10. -0. -0. ], [ 2.5 2.5 10. 10. 6.2831855 10. 1. 1. ], (8,), float32)\\n        The state is an 8-dimensional vector: the coordinates of the lander in x &amp; y, its linear velocities in x &amp; y, its angle, its angular velocity, and two booleans that represent whether each leg is in contact with the ground or not.\\n    '}</code>"},{"location":"code_docs/Environments/LunarLander/#src.Environments.LunarLander.LunarLander.__repr__","title":"<code>__repr__()</code>","text":"<p>This function returns the name of the environment.</p> <p>Returns:</p> Name Type Description <code>str</code> <p>The name of the environment.</p>"},{"location":"code_docs/Environments/LunarLander/#src.Environments.LunarLander.LunarLander.objective_metric","title":"<code>objective_metric(states)</code>","text":"<p>This function calculates the objective metric for the Lunar Lander environment.</p> <p>Parameters:</p> Name Type Description Default <code>states</code> <code>list</code> <p>The states of the environment.</p> required <p>Returns:</p> Type Description <code>list[dict[str, float]]</code> <p>list[dict[str, float]]: The objective metric for the environment.</p>"},{"location":"code_docs/Environments/LunarLander/#src.Environments.LunarLander.LunarLander.success_func","title":"<code>success_func(env, info)</code>","text":"<p>This function checks if the Lunar Lander has landed successfully or failed.</p> <p>Parameters:</p> Name Type Description Default <code>env</code> <code>Env</code> <p>The environment.</p> required <code>info</code> <code>dict</code> <p>The information about the environment.</p> required <p>Returns:</p> Type Description <code>tuple[bool | bool]</code> <p>tuple[bool | bool]: A tuple of two booleans. The first boolean represents if the lander has landed successfully, and the second boolean represents if the lander has failed</p>"},{"location":"code_docs/LLM/GenCode/","title":"GenCode","text":""},{"location":"code_docs/LLM/GenCode/#src.LLM.GenCode.GenCode","title":"<code>GenCode</code>","text":"<p>Generate the code from a response, it can be handle error, and refine from the llm new responses</p>"},{"location":"code_docs/LLM/GenCode/#src.LLM.GenCode.GenCode.__init__","title":"<code>__init__(env, llm)</code>","text":"<p>Generate the code from a response, it can be handle error, and refine from the llm new responses</p> <p>Parameters:</p> Name Type Description Default <code>env</code> <code>Environments</code> <p>the environment to test the code</p> required <code>llm</code> <code>OllamaChat</code> <p>the llm to handle the response</p> required"},{"location":"code_docs/LLM/GenCode/#src.LLM.GenCode.GenCode.compile_reward_function","title":"<code>compile_reward_function()</code>","text":"<p>Compile a reward function dynamically from a string response.</p> <p>This method takes a code string representing a reward function and dynamically compiles it into an executable Python function. It provides a secure way to generate reward functions for reinforcement learning environments.</p> Key Features <ul> <li>Dynamically executes code in an isolated global namespace</li> <li>Provides access to NumPy functions</li> <li>Extracts the compiled function by its name</li> <li>Robust error handling for syntax issues</li> </ul> <p>Parameters:</p> Name Type Description Default <code>response</code> <code>str</code> <p>A string containing a complete Python function definition             for a reward function.</p> required <p>Returns:</p> Name Type Description <code>Callable</code> <code>Callable</code> <p>The compiled reward function that can be called with appropriate     arguments in a gym environment.</p> <p>Raises:</p> Type Description <code>SyntaxError</code> <p>If the provided code contains invalid Python syntax.</p> <code>ValueError</code> <p>If the function cannot be extracted from the compiled namespace.</p> Notes <ul> <li>Uses <code>exec()</code> for dynamic code compilation</li> <li>Provides NumPy (<code>np</code>) in the execution namespace</li> <li>Assumes the last function defined in the response is the reward function</li> </ul>"},{"location":"code_docs/LLM/GenCode/#src.LLM.GenCode.GenCode.get","title":"<code>get(response)</code>","text":"<p>Get the next state from the response code</p> <p>Parameters:</p> Name Type Description Default <code>response</code> <code>str</code> <p>response code from the llm</p> required <p>Returns:</p> Name Type Description <code>State</code> <code>State</code> <p>contain the Callable reward function and is string associeted</p>"},{"location":"code_docs/LLM/GenCode/#src.LLM.GenCode.GenCode.get_clean_response","title":"<code>get_clean_response()</code>","text":"<p>Clean and validate a code response by removing code block markers and ensuring a function definition.</p> <p>This method is designed to process code responses, typically extracted from text or code blocks, by performing the following operations:</p> <ol> <li>Remove leading and trailing code block markers (```),</li> <li>Remove the 'python' language identifier,</li> <li>Strip any additional whitespace</li> <li>Validate that the response contains a function definition</li> </ol> <p>Parameters:</p> Name Type Description Default <code>response</code> <code>str</code> <p>The raw code response to be cleaned and validated.</p> required <p>Returns:</p> Name Type Description <code>str</code> <code>None</code> <p>The cleaned code response containing a function definition.</p> <p>Raises:</p> Type Description <code>ValueError</code> <p>If the response does not contain a valid function definition         (i.e., if \"def \" is not present in the cleaned response).</p> Logging <p>Logs the cleaned code at DEBUG level for debugging purposes.</p>"},{"location":"code_docs/LLM/GenCode/#src.LLM.GenCode.GenCode.get_runnable_function","title":"<code>get_runnable_function(error=None)</code>","text":"<p>Process and validate a reward function for a gym environment.</p> <p>This method attempts to generate and validate a reward function by:</p> <ol> <li>Handling potential previous errors</li> <li>Creating a gym environment</li> <li>Cleaning and compiling the code</li> <li>Testing the reward function with a sample action</li> <li>Recursively handling various potential errors</li> </ol> <p>Parameters:</p> Name Type Description Default <code>response</code> <code>str</code> <p>The code response containing the reward function definition.</p> required <code>error</code> <code>str</code> <p>Previous error message to be added to LLM context.                     Defaults to None.</p> <code>None</code> <p>Returns:</p> Name Type Description <code>tuple</code> <code>Callable</code> <p>A tuple containing: - Callable: The compiled and validated reward function - str: The original response code</p> <p>Raises:</p> Type Description <code>-ValueError</code> <p>Invalid function definition</p> <code>-SyntaxError</code> <p>Syntax issues in the function</p> <code>-RuntimeError</code> <p>Execution problems during function testing</p> Note <ul> <li>Uses recursion to handle potential errors</li> <li>Relies on get_code, compile_reward_function, and test_reward_function methods</li> <li>Provides a robust mechanism for generating valid reward functions</li> </ul>"},{"location":"code_docs/LLM/GenCode/#src.LLM.GenCode.GenCode.test_reward_function","title":"<code>test_reward_function(reward_function, *args, **kwargs)</code>","text":"<p>Test the compiled reward function with provided inputs to validate its execution.</p> <p>This method serves as a crucial validation step in the reward function generation process. It attempts to execute the reward function with the given arguments and logs the output or raises an error if execution fails.</p> Purpose <ul> <li>Verify the reward function can be executed without errors</li> <li>Log the reward function's output for debugging</li> <li>Ensure the function returns a valid result in the context of a gym environment</li> </ul> <p>Parameters:</p> Name Type Description Default <code>reward_function</code> <code>Callable</code> <p>The compiled reward function to be tested.</p> required <code>*args</code> <p>Variable length argument list to pass to the reward function. Typically includes observations, actions, or environment states.</p> <code>()</code> <code>**kwargs</code> <p>Arbitrary keyword arguments to pass to the reward function. May include additional context like 'terminated' or 'truncated' flags.</p> <code>{}</code> <p>Raises:</p> Type Description <code>RuntimeError</code> <p>If the reward function fails to execute successfully. This includes any exceptions that occur during function invocation.</p> Logging <ul> <li>Logs the reward function's output at DEBUG level when successful</li> <li>Provides detailed error information if execution fails</li> </ul> Notes <ul> <li>Designed to be flexible with varying function signatures</li> <li>Critical for validating dynamically generated reward functions</li> <li>Part of the reward function generation quality control process</li> </ul>"},{"location":"code_docs/LLM/LLMOptions/","title":"LLMOptions","text":"<p>Config file for the LLM model parameters.</p> <p>Parameters:</p> Name Type Description Default <code>temperature</code> <code>float</code> <p>Adjusts creativity in the model's responses (default: 0.8).</p> required <code>num_predict</code> <code>int</code> <p>Maximum tokens to predict in generation (default: -1).</p> required <code>mirostat</code> <code>int</code> <p>Enables Mirostat sampling for controlling perplexity  (default: 0).  - 0: Disabled - 1: Mirostat - 2: Mirostat 2.0</p> required <code>mirostat_eta</code> <code>float</code> <p>Adjusts the responsiveness of the Mirostat algorithm  (default: 0.1). </p> required <code>mirostat_tau</code> <code>float</code> <p>Balances coherence and diversity in the output  (default: 5.0). </p> required <code>num_ctx</code> <code>int</code> <p>Sets the size of the context window for token generation  (default: 2048). </p> required <code>repeat_last_n</code> <code>int</code> <p>Specifies the range to prevent repetition  (default: 64).  - 0: Disabled - -1: Uses num_ctx</p> required <code>repeat_penalty</code> <code>float</code> <p>Penalizes repeated tokens in generation  (default: 1.1). </p> required <code>temperature</code> <code>float</code> <p>Adjusts creativity in the model's responses  (default: 0.8). </p> required <code>seed</code> <code>int</code> <p>Random seed for deterministic outputs  (default: 0). </p> required <code>stop</code> <code>str</code> <p>Stop sequences to terminate generation  (default: None). </p> required <code>tfs_z</code> <code>float</code> <p>Enables Tail Free Sampling to reduce less probable tokens  (default: 1.0). </p> required <code>num_predict</code> <code>int</code> <p>Maximum tokens to predict in generation  (default: -1). </p> required <code>top_k</code> <code>int</code> <p>Limits probability space for token selection  (default: 40). </p> required <code>top_p</code> <code>float</code> <p>Controls cumulative probability for token selection  (default: 0.9). </p> required <code>min_p</code> <code>float</code> <p>Ensures tokens meet a minimum probability threshold relative to the most likely token  (default: 0.0).</p> required"},{"location":"code_docs/LLM/OllamaChat/","title":"OllamaChat","text":""},{"location":"code_docs/LLM/OllamaChat/#src.LLM.OllamaChat.OllamaChat","title":"<code>OllamaChat</code>","text":"<p>Class for an advanced Ollama chat session with extended configuration.</p>"},{"location":"code_docs/LLM/OllamaChat/#src.LLM.OllamaChat.OllamaChat.__init__","title":"<code>__init__(model='qwen2.5-coder', system_prompt=None, options=None, proxies=None)</code>","text":"<p>Initialize an advanced Ollama chat session with extended configuration.</p> <p>Parameters:</p> Name Type Description Default <code>model</code> <code>str</code> <p>The name of the Ollama model.</p> <code>'qwen2.5-coder'</code> <code>system_prompt</code> <code>str</code> <p>Initial system message to set chat context.</p> <code>None</code> <code>options</code> <code>dict</code> <p>Advanced model generation parameters.</p> <code>None</code> <code>proxies</code> <code>dict</code> <p>Proxy configuration for the HTTP requests.</p> <code>None</code>"},{"location":"code_docs/LLM/OllamaChat/#src.LLM.OllamaChat.OllamaChat.add_message","title":"<code>add_message(content, role='user', **kwargs)</code>","text":"<p>Add a message to the chat history with optional metadata.</p> <p>Parameters:</p> Name Type Description Default <code>content</code> <code>str</code> <p>The message content</p> required <code>role</code> <code>str</code> <p>Message role (user/assistant/system)</p> <code>'user'</code> <code>kwargs</code> <code>dict</code> <p>Additional message metadata</p> <code>{}</code>"},{"location":"code_docs/LLM/OllamaChat/#src.LLM.OllamaChat.OllamaChat.generate_response","title":"<code>generate_response(stream=False, llm_options={})</code>","text":"<p>Generate a response with advanced configuration options.</p> <p>Parameters:</p> Name Type Description Default <code>stream</code> <code>bool</code> <p>Stream response in real-time</p> <code>False</code> <code>llm_options</code> <code>dict</code> <p>Temporary generation options</p> <code>{}</code> <p>Returns:</p> Type Description <code>Union[str, Generator]</code> <p>Response as string or streaming generator</p>"},{"location":"code_docs/LLM/OllamaChat/#src.LLM.OllamaChat.OllamaChat.generate_simple_response","title":"<code>generate_simple_response(prompt, sys_prompt=None, stream=False, llm_options={})</code>","text":"<p>Generate a simple response without historic.</p> <p>Parameters:</p> Name Type Description Default <code>prompt</code> <code>str</code> <p>user prompt</p> required <code>sys_prompt</code> <code>str</code> <p>system prompt</p> <code>None</code> <code>stream</code> <code>bool</code> <p>Stream response in real-time</p> <code>False</code> <code>llm_options</code> <code>dict</code> <p>Temporary generation options</p> <code>{}</code> <p>Returns:</p> Type Description <p>Response as string or streaming generator</p>"},{"location":"code_docs/LLM/OllamaChat/#src.LLM.OllamaChat.OllamaChat.print_Generator_and_return","title":"<code>print_Generator_and_return(response, number=1)</code>","text":"<p>Prints the content of a response if it is a generator, or simply returns the response as is.</p> <p>Parameters:</p> Name Type Description Default <code>response</code> <code>Generator | str</code> <p>The response to print or return. If it's a generator,                         it will be printed chunk by chunk. If it's a string,                         it will be returned directly.</p> required <code>number</code> <code>int</code> <p>The index of the response (default is 1). Used for logging purposes.</p> <code>1</code> <p>Returns:</p> Type Description <code>str</code> <p>The original response if it is a string, or the concatenated string of all chunks</p> <code>str</code> <p>if it was a generator.</p>"},{"location":"code_docs/PolicyTrainer/CustomRewardWrapper/","title":"CustomRewardWrapper","text":""},{"location":"code_docs/PolicyTrainer/CustomRewardWrapper/#src.PolicyTrainer.CustomRewardWrapper.CustomRewardWrapper","title":"<code>CustomRewardWrapper</code>","text":"<p>               Bases: <code>Wrapper</code></p>"},{"location":"code_docs/PolicyTrainer/CustomRewardWrapper/#src.PolicyTrainer.CustomRewardWrapper.CustomRewardWrapper.__init__","title":"<code>__init__(env, success_func=None, llm_reward_function=None)</code>","text":"<p>Initialize the custom reward wrapper</p> <p>Parameters:</p> Name Type Description Default <code>env</code> <code>Env</code> <p>the current environment</p> required <code>success_func</code> <code>Callable</code> <p>this function should return True if success. Defaults to None.</p> <code>None</code> <code>llm_reward_function</code> <code>Callable</code> <p>the generated reward function. Defaults to None.</p> <code>None</code>"},{"location":"code_docs/PolicyTrainer/CustomRewardWrapper/#src.PolicyTrainer.CustomRewardWrapper.CustomRewardWrapper.step","title":"<code>step(action)</code>","text":"<p>Realise the action in the environment</p> <p>Parameters:</p> Name Type Description Default <code>action</code> <p>the action to realise</p> required <p>Returns:</p> Type Description <p>observation (): the new observation</p> <p>reward (): the reward of the action</p> <p>terminated (): True if the episode is terminated</p> <p>truncated (): True if the episode is truncated</p> <p>info (): additional information</p>"},{"location":"code_docs/PolicyTrainer/PolicyTrainer/","title":"PolicyTrainer","text":""},{"location":"code_docs/PolicyTrainer/PolicyTrainer/#src.PolicyTrainer.PolicyTrainer.PolicyTrainer","title":"<code>PolicyTrainer</code>","text":""},{"location":"code_docs/PolicyTrainer/PolicyTrainer/#src.PolicyTrainer.PolicyTrainer.PolicyTrainer.__init__","title":"<code>__init__(memory, seed, env_type, timeout, nb_vec_envs, legacy_training)</code>","text":"<p>Initialize the PolicyTrainer instance.</p> <p>Parameters:</p> Name Type Description Default <code>memory</code> <code>list[State]</code> <p>list of states</p> required <code>env_type</code> <code>EnvType</code> <p>the type of environment</p> required <code>timeout</code> <code>int</code> <p>the maximum number of timesteps</p> required"},{"location":"code_docs/PolicyTrainer/PolicyTrainer/#src.PolicyTrainer.PolicyTrainer.PolicyTrainer._generate_env_model","title":"<code>_generate_env_model(reward_func)</code>","text":"<p>Generate the environment model</p> <p>Parameters:</p> Name Type Description Default <code>reward_func</code> <code>Callable</code> <p>the generated reward function</p> required <p>Raises:</p> Type Description <code>ValueError</code> <p>if algo not implemented</p> <p>Returns:</p> Type Description <code>tuple[VecEnv, PPO, int]</code> <p>tuple[VecEnv, PPO, int]: the envs, the model, the number of envs</p>"},{"location":"code_docs/PolicyTrainer/PolicyTrainer/#src.PolicyTrainer.PolicyTrainer.PolicyTrainer._learning","title":"<code>_learning(state, queue=None)</code>","text":"<p>Train a policy for a given state</p> <p>Parameters:</p> Name Type Description Default <code>state</code> <code>State</code> <p>the state to train</p> required <code>queue</code> <code>Queue</code> <p>handle modification to return. Defaults to None.</p> <code>None</code>"},{"location":"code_docs/PolicyTrainer/PolicyTrainer/#src.PolicyTrainer.PolicyTrainer.PolicyTrainer._start_proccess_learning","title":"<code>_start_proccess_learning(idx)</code>","text":"<p>Start the learning process for a given state in a new process</p> <p>Parameters:</p> Name Type Description Default <code>idx</code> <code>int</code> <p>the index of the state to train</p> required"},{"location":"code_docs/PolicyTrainer/PolicyTrainer/#src.PolicyTrainer.PolicyTrainer.PolicyTrainer.evaluate_policy","title":"<code>evaluate_policy(list_idx)</code>","text":"<p>Evaluate policy performance for multiple reward functions</p> <p>Parameters:</p> Name Type Description Default <code>objectives_metrics</code> <code>list[callable]</code> <p>Custom objective metrics</p> required <code>num_episodes</code> <code>int</code> <p>Number of evaluation episodes</p> required <p>Returns:</p> Name Type Description <code>Dict</code> <code>tuple[list[int], list[int], float]</code> <p>Performance metrics for multiple reward functions</p>"},{"location":"code_docs/PolicyTrainer/PolicyTrainer/#src.PolicyTrainer.PolicyTrainer.PolicyTrainer.start_hf","title":"<code>start_hf(policy_path, nb_episodes=10)</code>","text":"<p>Start the test of a policy to evaluate its performances</p> <p>Parameters:</p> Name Type Description Default <code>policy_path</code> <code>str</code> <p>the path of the policy to test</p> required <code>nb_episodes</code> <code>int</code> <p>the number of episodes to test. Defaults to 100.</p> <code>10</code>"},{"location":"code_docs/PolicyTrainer/PolicyTrainer/#src.PolicyTrainer.PolicyTrainer.PolicyTrainer.start_learning","title":"<code>start_learning(idx)</code>","text":"<p>Start the learning process for a given state</p> <p>Parameters:</p> Name Type Description Default <code>idx</code> <code>int</code> <p>the index of the state to train</p> required"},{"location":"code_docs/PolicyTrainer/PolicyTrainer/#src.PolicyTrainer.PolicyTrainer.PolicyTrainer.start_vd","title":"<code>start_vd(policy_path, nb_episodes=3)</code>","text":"<p>Start the test of a policy to evaluate its performances</p> <p>Parameters:</p> Name Type Description Default <code>policy_path</code> <code>str</code> <p>the path of the policy to test</p> required <code>nb_episodes</code> <code>int</code> <p>the number of episodes to test. Defaults to 3.</p> <code>3</code>"},{"location":"code_docs/PolicyTrainer/PolicyTrainer/#src.PolicyTrainer.PolicyTrainer.PolicyTrainer.test_policy","title":"<code>test_policy(policy, nb_episodes=100)</code>","text":"<p>Test a policy on the environment</p> <p>Parameters:</p> Name Type Description Default <code>env</code> <code>VecEnv</code> <p>the environment</p> required <code>policy</code> <code>BasePolicy</code> <p>the policy to test</p> required <code>numvenv</code> <code>int</code> <p>the number of environments</p> required <code>nb_episodes</code> <code>int</code> <p>the number of episodes to test. Defaults to 100.</p> <code>100</code> <p>Returns:</p> Name Type Description <code>float</code> <code>float</code> <p>the success rate of the policy</p>"},{"location":"code_docs/PolicyTrainer/PolicyTrainer/#src.PolicyTrainer.PolicyTrainer.PolicyTrainer.test_policy_hf","title":"<code>test_policy_hf(policy_path, nb_episodes=10)</code>","text":"<p>Visualize the test of a policy to evaluate its performances</p> <p>Parameters:</p> Name Type Description Default <code>policy_path</code> <code>str</code> <p>the path of the policy to test</p> required <code>nb_episodes</code> <code>int</code> <p>the number of episodes to test. Defaults to 10.</p> <code>10</code>"},{"location":"code_docs/PolicyTrainer/PolicyTrainer/#src.PolicyTrainer.PolicyTrainer.PolicyTrainer.test_policy_video","title":"<code>test_policy_video(policy_path, nb_episodes=3)</code>","text":"<p>Visualize the test of a policy to evaluate its performances</p> <p>Parameters:</p> Name Type Description Default <code>policy_path</code> <code>str</code> <p>the path of the policy to test</p> required <code>nb_episodes</code> <code>int</code> <p>the number of episodes to test. Defaults to 3.</p> <code>3</code>"},{"location":"code_docs/PolicyTrainer/TrainingInfoCallback/","title":"TrainingInfoCallback","text":""},{"location":"code_docs/PolicyTrainer/TrainingInfoCallback/#src.PolicyTrainer.TrainingInfoCallback.TrainingInfoCallback","title":"<code>TrainingInfoCallback</code>","text":"<p>               Bases: <code>BaseCallback</code></p>"},{"location":"code_docs/PolicyTrainer/TrainingInfoCallback/#src.PolicyTrainer.TrainingInfoCallback.TrainingInfoCallback.__init__","title":"<code>__init__()</code>","text":"<p>Callback for harvest training information</p>"},{"location":"code_docs/PolicyTrainer/TrainingInfoCallback/#src.PolicyTrainer.TrainingInfoCallback.TrainingInfoCallback._on_step","title":"<code>_on_step()</code>","text":"<p>Call after each step of the training</p>"},{"location":"code_docs/PolicyTrainer/TrainingInfoCallback/#src.PolicyTrainer.TrainingInfoCallback.TrainingInfoCallback._on_training_end","title":"<code>_on_training_end()</code>","text":"<p>Call at the end of the training</p>"},{"location":"code_docs/PolicyTrainer/TrainingInfoCallback/#src.PolicyTrainer.TrainingInfoCallback.TrainingInfoCallback._on_training_start","title":"<code>_on_training_start()</code>","text":"<p>Call at the start of the training</p>"},{"location":"code_docs/PolicyTrainer/TrainingInfoCallback/#src.PolicyTrainer.TrainingInfoCallback.TrainingInfoCallback.get_metrics","title":"<code>get_metrics()</code>","text":"<p>Get metrics harvested</p> <p>Returns:</p> Name Type Description <code>dict</code> <p>contain metrics harvested</p>"},{"location":"code_docs/State/State/","title":"State","text":""},{"location":"code_docs/State/State/#src.State.State.State","title":"<code>State</code>","text":"<p>Represents a state in the reward function generation and evaluation process.</p> <p>This class encapsulates the key components of a reward function's lifecycle, tracking its index, implementation, policy, and performance metrics.</p> <p>Attributes:</p> Name Type Description <code>idx</code> <code>int</code> <p>Unique identifier for the state.</p> <code>reward_func</code> <code>Callable</code> <p>The compiled reward function.</p> <code>reward_func_str</code> <code>str</code> <p>String representation of the reward function.</p> <code>policy</code> <code>object</code> <p>The policy associated with the reward function.</p> <code>performances</code> <code>dict</code> <p>Performance metrics of the reward function.</p> Key Characteristics <ul> <li>Tracks the evolution of reward functions</li> <li>Provides a snapshot of a specific iteration</li> <li>Allows for dynamic updating of policy and performance</li> </ul> Initialization Constraints <ul> <li>Initial state (idx=0) cannot have a reward function</li> <li>Non-initial states must have both a reward function and its string representation</li> </ul> <p>Methods:</p> Name Description <code>- set_policy</code> <p>Update the associated policy</p> <code>- set_performances</code> <p>Update performance metrics</p> <code>- __repr__</code> <p>Provide a human-readable string representation of the state</p> Example Notes <ul> <li>Designed for tracking reward function iterations</li> <li>Provides flexibility in managing function states</li> <li>Supports logging and debugging of reward function generation process</li> </ul>"},{"location":"code_docs/State/State/#src.State.State.State--creating-a-new-state-for-a-reward-function","title":"Creating a new state for a reward function","text":"<p>state = State(     idx=1,     reward_func=my_reward_func,     reward_func_str=\"def reward_func(...):\",     policy=None,     perfomances=None )</p>"},{"location":"code_docs/State/State/#src.State.State.State--updating-state-with-training-results","title":"Updating state with training results","text":"<p>state.set_policy(trained_policy) state.set_performances({     'success_rate': 0.75,     'average_reward': 10.5 })</p>"},{"location":"code_docs/State/State/#src.State.State.State.__init__","title":"<code>__init__(idx, reward_func=None, reward_func_str=None, policy=None, perfomances=None)</code>","text":"<p>Initialize a new state in the reward function generation process.</p> <p>Parameters:</p> Name Type Description Default <code>idx</code> <code>int</code> <p>the index of the memory</p> required <code>reward_func</code> <code>Callable</code> <p>. Defaults to None.</p> <code>None</code> <code>reward_func_str</code> <code>str</code> <p>for printing the reward function. Defaults to None.</p> <code>None</code> <code>policy</code> <code>_type_</code> <p>. Defaults to None.</p> <code>None</code> <code>perfomances</code> <code>dict</code> <p>. Defaults to None.</p> <code>None</code>"},{"location":"code_docs/State/State/#src.State.State.State.__repr__","title":"<code>__repr__()</code>","text":"<p>Provide a human-readable string representation of the state</p> <p>Returns:</p> Name Type Description <code>str</code> <p>the string representation of the state</p>"},{"location":"code_docs/State/State/#src.State.State.State.set_performances","title":"<code>set_performances(performances)</code>","text":"<p>Set the performances of the state</p> <p>Parameters:</p> Name Type Description Default <code>performances</code> <code>dict</code> <p>the performances to set</p> required"},{"location":"code_docs/State/State/#src.State.State.State.set_policy","title":"<code>set_policy(policy)</code>","text":"<p>Set the policy of the state</p> <p>Parameters:</p> Name Type Description Default <code>policy</code> <code>_type_</code> <p>the policy to set</p> required"},{"location":"code_docs/log/LoggerCSV/","title":"LoggerCSV","text":""},{"location":"code_docs/log/LoggerCSV/#src.log.LoggerCSV.LoggerCSV","title":"<code>LoggerCSV</code>","text":"<p>Logger for recording performance metrics in a CSV file.</p> <p>Attributes:</p> Name Type Description <code>env_type</code> <code>EnvType</code> <p>The type of environment.</p> <code>llm</code> <code>str</code> <p>The language model used.</p> <code>csv_file</code> <code>str</code> <p>Path to the CSV file for logging.</p> <code>logger</code> <code>Logger</code> <p>Instance of the logger.</p> <code>_initialized</code> <code>bool</code> <p>Indicates whether the logger has been initialized.</p>"},{"location":"code_docs/log/LoggerCSV/#src.log.LoggerCSV.LoggerCSV.__init__","title":"<code>__init__(env_type, llm, total_timesteps)</code>","text":"<p>Initialize the LoggerCSV instance.</p> <p>Parameters:</p> Name Type Description Default <code>env_type</code> <code>EnvType</code> <p>The type of environment.</p> required <code>llm</code> <code>str</code> <p>The language model used.</p> required"},{"location":"code_docs/log/LoggerCSV/#src.log.LoggerCSV.LoggerCSV.__new__","title":"<code>__new__(env_type, llm, total_timesteps)</code>","text":"<p>Create a new instance of LoggerCSV.</p> <p>Parameters:</p> Name Type Description Default <code>env_type</code> <code>EnvType</code> <p>The type of environment.</p> required <code>llm</code> <code>str</code> <p>The language model used.</p> required <p>Returns:</p> Name Type Description <code>LoggerCSV</code> <p>The singleton instance of LoggerCSV.</p>"},{"location":"code_docs/log/LoggerCSV/#src.log.LoggerCSV.LoggerCSV.to_csv","title":"<code>to_csv(state)</code>","text":"<p>Write performance metrics to the CSV file.</p> <p>Parameters:</p> Name Type Description Default <code>state</code> <p>The state object containing performance metrics.</p> required <p>Raises:</p> Type Description <code>ValueError</code> <p>If the state is not completed.</p>"},{"location":"code_docs/log/LoggerCSV/#src.log.LoggerCSV.getLoggerCSV","title":"<code>getLoggerCSV()</code>","text":"<p>Retrieve the instance of the CSV logger.</p> <p>Raises:</p> Type Description <code>NotImplementedError</code> <p>If the logger instance has not been created.</p>"},{"location":"code_docs/log/log_config/","title":"log_config","text":""},{"location":"code_docs/log/log_config/#src.log.log_config.init_logger","title":"<code>init_logger(log_level='INFO', log_file='log/log.txt')</code>","text":"<p>Initialize the logger with the specified log level and log file.</p> <p>Parameters:</p> Name Type Description Default <code>log_level</code> <code>str</code> <p>The log level (DEBUG, INFO, WARNING, ERROR).</p> <code>'INFO'</code> <code>log_file</code> <code>str</code> <p>The path to the log file.</p> <code>'log/log.txt'</code>"},{"location":"code_docs/utils/utils/","title":"utils","text":""},{"location":"code_docs/utils/utils/#src.utils.utils.unwrap_env","title":"<code>unwrap_env(env)</code>","text":"<p>Unwraps a gym environment to get the base env.</p>"}]}